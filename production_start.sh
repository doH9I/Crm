#!/bin/bash

echo "üöÄ Construction CRM - Production Startup Script"
echo "==============================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º
print_status() {
    echo -e "${2}${1}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–∞–Ω–¥—ã
check_command() {
    if command -v $1 &> /dev/null; then
        print_status "‚úÖ $1 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" $GREEN
        return 0
    else
        print_status "‚ùå $1 –Ω–µ –Ω–∞–π–¥–µ–Ω" $RED
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_environment() {
    print_status "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..." $BLUE
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Node.js
    if ! check_command "node"; then
        print_status "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –≤–µ—Ä—Å–∏–∏ 18+" $RED
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Node.js
    NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
    if [ "$NODE_VERSION" -lt 16 ]; then
        print_status "‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Node.js –≤–µ—Ä—Å–∏–∏ 16+" $YELLOW
    else
        print_status "‚úÖ Node.js –≤–µ—Ä—Å–∏—è $NODE_VERSION –ø–æ–¥—Ö–æ–¥–∏—Ç" $GREEN
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º npm
    check_command "npm"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º MySQL
    if ! check_command "mysql"; then
        print_status "‚ö†Ô∏è  MySQL –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–æ —ç—Ç–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ" $YELLOW
    fi
    
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
check_project_files() {
    print_status "üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..." $BLUE
    
    REQUIRED_FILES=(
        "server.js"
        "package.json"
        ".env"
        "public/index.html"
        "database/schema.sql"
        "init_database.js"
    )
    
    for file in "${REQUIRED_FILES[@]}"; do
        if [ -f "$file" ]; then
            print_status "‚úÖ $file –Ω–∞–π–¥–µ–Ω" $GREEN
        else
            print_status "‚ùå $file –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" $RED
            exit 1
        fi
    done
    
    echo ""
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    print_status "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." $BLUE
    
    if [ ! -d "node_modules" ] || [ ! -f "package-lock.json" ]; then
        print_status "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." $YELLOW
        npm install
        if [ $? -eq 0 ]; then
            print_status "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" $GREEN
        else
            print_status "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π" $RED
            exit 1
        fi
    else
        print_status "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" $GREEN
    fi
    
    echo ""
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
create_directories() {
    print_status "üìÇ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..." $BLUE
    
    DIRECTORIES=("uploads" "logs" "exports")
    
    for dir in "${DIRECTORIES[@]}"; do
        mkdir -p "$dir"
        chmod 755 "$dir"
        print_status "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $dir –≥–æ—Ç–æ–≤–∞" $GREEN
    done
    
    # –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è public
    chmod -R 755 public/
    print_status "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã" $GREEN
    
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ MySQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
check_mysql() {
    print_status "üóÑÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ MySQL..." $BLUE
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if [ -f .env ]; then
        export $(grep -v '^#' .env | xargs)
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å MySQL
    if systemctl is-active --quiet mysql 2>/dev/null; then
        print_status "‚úÖ MySQL –∑–∞–ø—É—â–µ–Ω" $GREEN
    else
        print_status "‚ö†Ô∏è  MySQL –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø–æ–ø—ã—Ç–∫–∞ –∑–∞–ø—É—Å–∫–∞..." $YELLOW
        sudo systemctl start mysql 2>/dev/null || print_status "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å MySQL" $RED
    fi
    
    echo ""
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
initialize_database() {
    print_status "üèóÔ∏è  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..." $BLUE
    
    node init_database.js
    
    if [ $? -eq 0 ]; then
        print_status "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞" $GREEN
    else
        print_status "‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö" $RED
        echo ""
        print_status "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:" $YELLOW
        print_status "   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MySQL" $YELLOW
        print_status "   2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å .env —Ñ–∞–π–ª" $YELLOW
        print_status "   3. –ó–∞–ø—É—Å—Ç–∏—Ç—å: mysql -u root -p < create_database.sql" $YELLOW
        exit 1
    fi
    
    echo ""
}

# –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞
free_port() {
    PORT=${1:-3001}
    
    print_status "üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ $PORT..." $BLUE
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–Ω—è—Ç –ª–∏ –ø–æ—Ä—Ç
    if lsof -i :$PORT &>/dev/null; then
        print_status "‚ö†Ô∏è  –ü–æ—Ä—Ç $PORT –∑–∞–Ω—è—Ç, –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º..." $YELLOW
        
        # –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É
        PID=$(lsof -t -i :$PORT 2>/dev/null)
        if [ ! -z "$PID" ]; then
            kill -9 $PID 2>/dev/null
            sleep 2
        fi
        
        # –£–±–∏–≤–∞–µ–º –≤—Å–µ Node.js –ø—Ä–æ—Ü–µ—Å—Å—ã –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏
        pkill -f node 2>/dev/null
        sleep 2
        
        if lsof -i :$PORT &>/dev/null; then
            print_status "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –ø–æ—Ä—Ç $PORT" $RED
            exit 1
        else
            print_status "‚úÖ –ü–æ—Ä—Ç $PORT –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω" $GREEN
        fi
    else
        print_status "‚úÖ –ü–æ—Ä—Ç $PORT —Å–≤–æ–±–æ–¥–µ–Ω" $GREEN
    fi
    
    echo ""
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
setup_firewall() {
    print_status "üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞..." $BLUE
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º PORT –∏–∑ .env
    if [ -f .env ]; then
        PORT=$(grep "^PORT=" .env | cut -d'=' -f2)
    fi
    PORT=${PORT:-3001}
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç –≤ ufw
    sudo ufw allow $PORT &>/dev/null && print_status "‚úÖ –ü–æ—Ä—Ç $PORT –æ—Ç–∫—Ä—ã—Ç –≤ —Ñ–∞–π—Ä–≤–æ–ª–µ" $GREEN || print_status "‚ö†Ô∏è  –§–∞–π—Ä–≤–æ–ª –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)" $YELLOW
    
    echo ""
}

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
start_server() {
    print_status "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞..." $BLUE
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º PORT –∏–∑ .env
    if [ -f .env ]; then
        PORT=$(grep "^PORT=" .env | cut -d'=' -f2)
    fi
    PORT=${PORT:-3001}
    
    print_status "üåê –°–µ—Ä–≤–µ—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://79.174.85.87:$PORT" $GREEN
    print_status "üîß –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C" $YELLOW
    print_status "üìä –õ–æ–≥–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ logs/combined.log" $BLUE
    
    echo ""
    print_status "Starting server..." $GREEN
    echo "================================"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    node server.js
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [ ! -f "server.js" ]; then
        print_status "‚ùå –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞" $RED
        exit 1
    fi
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
    check_environment
    check_project_files
    install_dependencies
    create_directories
    check_mysql
    initialize_database
    free_port
    setup_firewall
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
    start_server
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
trap 'print_status "\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" $YELLOW; exit 0' INT TERM

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
main "$@"