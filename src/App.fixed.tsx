import React, { useEffect } from 'react';
import { Routes, Route, Navigate } from 'react-router-dom';
import { useAuthStore, useProjectSelectionStore } from './store/simple';
import LoginPage from './pages/LoginPage';
import DashboardLayout from './components/Layout/DashboardLayout';
import DashboardPage from './pages/DashboardPage';

// –ü—Ä–æ—Å—Ç–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
const ProtectedRoute: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const { isAuthenticated } = useAuthStore();
  
  if (!isAuthenticated) {
    return <Navigate to="/login" replace />;
  }
  
  return <>{children}</>;
};

// –ü—Ä–æ—Å—Ç–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
const PublicRoute: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const { isAuthenticated } = useAuthStore();
  
  if (isAuthenticated) {
    return <Navigate to="/dashboard" replace />;
  }
  
  return <>{children}</>;
};

// –ü—Ä–æ—Å—Ç–æ–π Dashboard –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const SimpleDashboard: React.FC = () => {
  const { user, logout } = useAuthStore();
  const { selectedProjectId, availableProjects, setSelectedProject } = useProjectSelectionStore();

  const selectedProject = selectedProjectId 
    ? availableProjects.find(p => p.id === selectedProjectId)
    : null;

  return (
    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '30px', borderBottom: '2px solid #1976d2', paddingBottom: '15px' }}>
        <h1 style={{ color: '#1976d2', margin: 0 }}>
          {selectedProject ? `–ü—Ä–æ–µ–∫—Ç: ${selectedProject.name}` : 'CRM –°–∏—Å—Ç–µ–º–∞ - –í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã'}
        </h1>
        <div>
          <span style={{ marginRight: '15px', color: '#666' }}>üë§ {user?.name}</span>
          <button 
            onClick={logout}
            style={{ 
              padding: '8px 15px', 
              backgroundColor: '#dc2626', 
              color: 'white', 
              border: 'none', 
              borderRadius: '6px',
              cursor: 'pointer',
              fontSize: '14px'
            }}
          >
            –í—ã–π—Ç–∏
          </button>
        </div>
      </div>

      {/* –í—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–æ–≤ */}
      <div style={{ marginBottom: '30px', padding: '25px', backgroundColor: '#f8fafc', borderRadius: '12px', border: '1px solid #e2e8f0' }}>
        <h3 style={{ color: '#374151', marginBottom: '15px', fontSize: '18px' }}>üèóÔ∏è –í—ã–±–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞:</h3>
        <div style={{ display: 'flex', gap: '12px', flexWrap: 'wrap' }}>
          <button
            onClick={() => setSelectedProject(null)}
            style={{
              padding: '12px 20px',
              backgroundColor: selectedProjectId === null ? '#1976d2' : 'white',
              color: selectedProjectId === null ? 'white' : '#374151',
              border: selectedProjectId === null ? 'none' : '2px solid #e2e8f0',
              borderRadius: '8px',
              cursor: 'pointer',
              fontSize: '14px',
              fontWeight: '500',
              transition: 'all 0.2s',
              boxShadow: selectedProjectId === null ? '0 4px 12px rgba(25, 118, 210, 0.3)' : '0 2px 4px rgba(0,0,0,0.1)'
            }}
          >
            üìä –í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã
          </button>
          {availableProjects.map((project) => (
            <button
              key={project.id}
              onClick={() => setSelectedProject(project.id)}
              style={{
                padding: '12px 20px',
                backgroundColor: selectedProjectId === project.id ? '#1976d2' : 'white',
                color: selectedProjectId === project.id ? 'white' : '#374151',
                border: selectedProjectId === project.id ? 'none' : '2px solid #e2e8f0',
                borderRadius: '8px',
                cursor: 'pointer',
                fontSize: '14px',
                fontWeight: '500',
                transition: 'all 0.2s',
                boxShadow: selectedProjectId === project.id ? '0 4px 12px rgba(25, 118, 210, 0.3)' : '0 2px 4px rgba(0,0,0,0.1)'
              }}
            >
              üè¢ {project.name} ({project.progress}%)
            </button>
          ))}
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ */}
      {selectedProject ? (
        <div style={{ marginBottom: '30px', padding: '25px', backgroundColor: '#f0fdf4', borderRadius: '12px', border: '1px solid #bbf7d0' }}>
          <h3 style={{ color: '#166534', marginBottom: '20px', fontSize: '18px' }}>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–µ–∫—Ç–µ:</h3>
          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '15px' }}>
            <div>
              <p style={{ margin: '8px 0' }}><strong>üë• –ö–ª–∏–µ–Ω—Ç:</strong> {selectedProject.client}</p>
              <p style={{ margin: '8px 0' }}><strong>üìç –ê–¥—Ä–µ—Å:</strong> {selectedProject.address}</p>
              <p style={{ margin: '8px 0' }}><strong>üìà –ü—Ä–æ–≥—Ä–µ—Å—Å:</strong> 
                <span style={{ 
                  backgroundColor: selectedProject.progress > 70 ? '#10b981' : selectedProject.progress > 30 ? '#f59e0b' : '#ef4444',
                  color: 'white',
                  padding: '2px 8px',
                  borderRadius: '4px',
                  marginLeft: '8px',
                  fontSize: '12px',
                  fontWeight: 'bold'
                }}>
                  {selectedProject.progress}%
                </span>
              </p>
            </div>
            <div>
              <p style={{ margin: '8px 0' }}><strong>üí∞ –ë—é–¥–∂–µ—Ç:</strong> {selectedProject.budget.toLocaleString('ru-RU')} —Ä—É–±.</p>
              <p style={{ margin: '8px 0' }}><strong>üí∏ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ:</strong> {selectedProject.spentAmount.toLocaleString('ru-RU')} —Ä—É–±.</p>
              <p style={{ margin: '8px 0' }}><strong>‚ö° –°—Ç–∞—Ç—É—Å:</strong> 
                <span style={{
                  backgroundColor: selectedProject.status === 'in_progress' ? '#3b82f6' : '#6b7280',
                  color: 'white',
                  padding: '2px 8px',
                  borderRadius: '4px',
                  marginLeft: '8px',
                  fontSize: '12px'
                }}>
                  {selectedProject.status === 'in_progress' ? '–í —Ä–∞–±–æ—Ç–µ' : selectedProject.status === 'planning' ? '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ' : selectedProject.status}
                </span>
              </p>
            </div>
          </div>
        </div>
      ) : (
        <div style={{ marginBottom: '30px', padding: '25px', backgroundColor: '#fef3e8', borderRadius: '12px', border: '1px solid #fed7aa' }}>
          <h3 style={{ color: '#9a3412', marginBottom: '20px', fontSize: '18px' }}>üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</h3>
          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))', gap: '15px' }}>
            <div>
              <p style={{ margin: '8px 0' }}><strong>üèóÔ∏è –í—Å–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–æ–≤:</strong> {availableProjects.length}</p>
              <p style={{ margin: '8px 0' }}><strong>üí∞ –û–±—â–∏–π –±—é–¥–∂–µ—Ç:</strong> {availableProjects.reduce((sum, p) => sum + p.budget, 0).toLocaleString('ru-RU')} —Ä—É–±.</p>
            </div>
            <div>
              <p style={{ margin: '8px 0' }}><strong>üí∏ –û–±—â–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã:</strong> {availableProjects.reduce((sum, p) => sum + p.spentAmount, 0).toLocaleString('ru-RU')} —Ä—É–±.</p>
              <p style={{ margin: '8px 0' }}><strong>üìà –°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å:</strong> {Math.round(availableProjects.reduce((sum, p) => sum + p.progress, 0) / availableProjects.length)}%</p>
            </div>
          </div>
        </div>
      )}

      {/* –ú–µ–Ω—é –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      <div style={{ padding: '25px', backgroundColor: '#f8fafc', borderRadius: '12px', border: '1px solid #e2e8f0' }}>
        <h3 style={{ color: '#374151', marginBottom: '20px', fontSize: '18px' }}>üîß –†–∞–∑–¥–µ–ª—ã —Å–∏—Å—Ç–µ–º—ã:</h3>
        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(180px, 1fr))', gap: '15px' }}>
          {[
            { name: '–ü—Ä–æ–µ–∫—Ç—ã', icon: 'üèóÔ∏è', desc: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏' },
            { name: '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã', icon: 'üì¶', desc: '–°–∫–ª–∞–¥ –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã' }, 
            { name: '–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏', icon: 'üë•', desc: '–ö–æ–º–∞–Ω–¥–∞ –∏ HR' },
            { name: '–§–∏–Ω–∞–Ω—Å—ã', icon: 'üí∞', desc: '–ë—é–¥–∂–µ—Ç—ã –∏ —Å—á–µ—Ç–∞' },
            { name: '–ö–∞–ª–µ–Ω–¥–∞—Ä—å', icon: 'üìÖ', desc: '–°–æ–±—ã—Ç–∏—è –∏ –∑–∞–¥–∞—á–∏' },
            { name: '–û—Ç—á–µ—Ç—ã', icon: 'üìä', desc: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ –æ—Ç—á–µ—Ç—ã' },
            { name: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', icon: '‚öôÔ∏è', desc: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è' }
          ].map((section) => (
            <div 
              key={section.name}
              style={{ 
                padding: '20px', 
                backgroundColor: 'white', 
                borderRadius: '8px', 
                textAlign: 'center',
                border: '1px solid #e2e8f0',
                cursor: 'pointer',
                transition: 'all 0.2s',
                boxShadow: '0 2px 4px rgba(0,0,0,0.05)'
              }}
              onMouseOver={(e) => {
                e.currentTarget.style.boxShadow = '0 4px 12px rgba(0,0,0,0.1)';
                e.currentTarget.style.transform = 'translateY(-2px)';
              }}
              onMouseOut={(e) => {
                e.currentTarget.style.boxShadow = '0 2px 4px rgba(0,0,0,0.05)';
                e.currentTarget.style.transform = 'translateY(0)';
              }}
            >
              <div style={{ fontSize: '24px', marginBottom: '8px' }}>{section.icon}</div>
              <div style={{ fontWeight: '600', color: '#374151', marginBottom: '4px' }}>{section.name}</div>
              <div style={{ fontSize: '12px', color: '#6b7280' }}>{section.desc}</div>
            </div>
          ))}
        </div>
      </div>

      {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ */}
      <div style={{ marginTop: '30px', padding: '25px', backgroundColor: '#fef9e7', borderRadius: '12px', border: '1px solid #fef08a' }}>
        <h4 style={{ color: '#92400e', marginBottom: '15px' }}>‚úÖ –ú–Ω–æ–≥–æ–ø—Ä–æ–µ–∫—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!</h4>
        <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '10px' }}>
          <ul style={{ color: '#451a03', margin: 0, paddingLeft: '20px' }}>
            <li>–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –ø—Ä–æ–µ–∫—Ç–∞–º–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ</li>
            <li>–î–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—É—é—Ç—Å—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—Ä–æ–µ–∫—Ç—É</li>
          </ul>
          <ul style={{ color: '#451a03', margin: 0, paddingLeft: '20px' }}>
            <li>–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ</li>
            <li>–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –ø–æ–ª–Ω—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º</li>
          </ul>
        </div>
      </div>
    </div>
  );
};

const AppFixed: React.FC = () => {
  return (
    <div className="App">
      <Routes>
        {/* –ü—É–±–ª–∏—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã */}
        <Route
          path="/login"
          element={
            <PublicRoute>
              <LoginPage />
            </PublicRoute>
          }
        />

        {/* –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã */}
        <Route
          path="/*"
          element={
            <ProtectedRoute>
              <SimpleDashboard />
            </ProtectedRoute>
          }
        />
      </Routes>
    </div>
  );
};

export default AppFixed;