// Offers module for Construction CRM
// –ü–æ–ª–Ω–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–æ–¥—É–ª—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π

class OffersModule {
    constructor() {
        this.container = null;
        this.offers = [];
        this.currentOffer = null;
        this.filters = {
            status: '',
            type: '',
            client: '',
            search: ''
        };
        this.pagination = {
            page: 1,
            limit: 20,
            total: 0
        };
    }

    // Initialize offers module
    async init() {
        console.log('üìÑ Initializing Offers module...');
        this.container = document.getElementById('content-area');
        await this.render();
        await this.loadOffers();
        this.initEventListeners();
    }

    // Render offers layout
    async render() {
        this.container.innerHTML = `
            <div class="offers-module">
                <!-- Header with actions -->
                <div class="module-header">
                    <div class="header-left">
                        <h2 class="module-title">
                            <i class="fas fa-file-contract"></i>
                            –ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
                        </h2>
                        <p class="module-description">–°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–º–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º–∏</p>
                    </div>
                    <div class="header-actions">
                        <button class="btn btn-outline" onclick="offersModule.exportOffers()">
                            <i class="fas fa-download"></i>
                            –≠–∫—Å–ø–æ—Ä—Ç
                        </button>
                        <button class="btn btn-primary" onclick="offersModule.showCreateOfferModal()">
                            <i class="fas fa-plus"></i>
                            –ù–æ–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
                        </button>
                    </div>
                </div>

                <!-- Statistics Cards -->
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-file-alt"></i>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value" id="total-offers">0</div>
                            <div class="stat-label">–í—Å–µ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π</div>
                        </div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-clock"></i>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value" id="pending-offers">0</div>
                            <div class="stat-label">–í –æ–∂–∏–¥–∞–Ω–∏–∏</div>
                        </div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value" id="accepted-offers">0</div>
                            <div class="stat-label">–ü—Ä–∏–Ω—è—Ç—ã–µ</div>
                        </div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon">
                            <i class="fas fa-ruble-sign"></i>
                        </div>
                        <div class="stat-content">
                            <div class="stat-value" id="total-value">0 ‚ÇΩ</div>
                            <div class="stat-label">–û–±—â–∞—è —Å—É–º–º–∞</div>
                        </div>
                    </div>
                </div>

                <!-- Filters -->
                <div class="card filters-panel">
                    <div class="card-body">
                        <div class="filters-row">
                            <div class="filter-group">
                                <label>–ü–æ–∏—Å–∫</label>
                                <div class="search-box">
                                    <input type="text" id="offers-search" placeholder="–ü–æ–∏—Å–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π...">
                                    <i class="fas fa-search"></i>
                                </div>
                            </div>
                            <div class="filter-group">
                                <label>–°—Ç–∞—Ç—É—Å</label>
                                <select id="offers-status-filter">
                                    <option value="">–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã</option>
                                    <option value="draft">–ß–µ—Ä–Ω–æ–≤–∏–∫</option>
                                    <option value="sent">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ</option>
                                    <option value="viewed">–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ</option>
                                    <option value="accepted">–ü—Ä–∏–Ω—è—Ç–æ</option>
                                    <option value="rejected">–û—Ç–∫–ª–æ–Ω–µ–Ω–æ</option>
                                    <option value="expired">–ò—Å—Ç–µ–∫–ª–æ</option>
                                </select>
                            </div>
                            <div class="filter-group">
                                <label>–¢–∏–ø</label>
                                <select id="offers-type-filter">
                                    <option value="">–í—Å–µ —Ç–∏–ø—ã</option>
                                    <option value="construction">–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ</option>
                                    <option value="renovation">–†–µ–º–æ–Ω—Ç</option>
                                    <option value="design">–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</option>
                                    <option value="consultation">–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</option>
                                </select>
                            </div>
                            <div class="filter-group">
                                <button class="btn btn-secondary" onclick="offersModule.resetFilters()">
                                    <i class="fas fa-times"></i>
                                    –°–±—Ä–æ—Å–∏—Ç—å
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Offers List -->
                <div class="card">
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table" id="offers-table">
                                <thead>
                                    <tr>
                                        <th>‚Ññ</th>
                                        <th>–ö–ª–∏–µ–Ω—Ç</th>
                                        <th>–¢–∏–ø</th>
                                        <th>–°—É–º–º–∞</th>
                                        <th>–°—Ç–∞—Ç—É—Å</th>
                                        <th>–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è</th>
                                        <th>–°–æ–∑–¥–∞–Ω–æ</th>
                                        <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                                    </tr>
                                </thead>
                                <tbody id="offers-tbody">
                                    <tr>
                                        <td colspan="8" class="text-center p-4">
                                            <div class="spinner"></div>
                                            <p class="mt-2">–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π...</p>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- Pagination -->
                <div class="pagination-container" id="offers-pagination">
                    <!-- Pagination will be rendered here -->
                </div>
            </div>

            <!-- Create Offer Modal -->
            <div id="create-offer-modal" class="modal-overlay">
                <div class="modal modal-lg">
                    <div class="modal-header">
                        <h3>–°–æ–∑–¥–∞—Ç—å –∫–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</h3>
                        <button class="modal-close" onclick="offersModule.closeCreateModal()">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="create-offer-form">
                            <div class="form-grid cols-2">
                                <div class="form-group">
                                    <label for="offer-title">–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è *</label>
                                    <input type="text" id="offer-title" name="title" required>
                                </div>
                                <div class="form-group">
                                    <label for="offer-client">–ö–ª–∏–µ–Ω—Ç *</label>
                                    <select id="offer-client" name="clientId" required>
                                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="offer-type">–¢–∏–ø —Ä–∞–±–æ—Ç *</label>
                                    <select id="offer-type" name="type" required>
                                        <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø</option>
                                        <option value="construction">–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ</option>
                                        <option value="renovation">–†–µ–º–æ–Ω—Ç</option>
                                        <option value="design">–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</option>
                                        <option value="consultation">–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="offer-amount">–°—É–º–º–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</label>
                                    <input type="number" id="offer-amount" name="amount" step="0.01" min="0">
                                </div>
                                <div class="form-group">
                                    <label for="offer-valid-until">–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–æ</label>
                                    <input type="date" id="offer-valid-until" name="validUntil">
                                </div>
                                <div class="form-group">
                                    <label for="offer-delivery-time">–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–¥–Ω–µ–π)</label>
                                    <input type="number" id="offer-delivery-time" name="deliveryTime" min="1">
                                </div>
                                <div class="form-group">
                                    <label for="offer-payment-terms">–£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã</label>
                                    <select id="offer-payment-terms" name="paymentTerms">
                                        <option value="prepayment_100">100% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞</option>
                                        <option value="prepayment_50">50% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞, 50% –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏</option>
                                        <option value="prepayment_30">30% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞, 70% –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏</option>
                                        <option value="after_completion">–û–ø–ª–∞—Ç–∞ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏</option>
                                        <option value="monthly">–ï–∂–µ–º–µ—Å—è—á–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏</option>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="offer-warranty">–ì–∞—Ä–∞–Ω—Ç–∏—è (–º–µ—Å—è—Ü–µ–≤)</label>
                                    <input type="number" id="offer-warranty" name="warranty" min="0" value="12">
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="offer-description">–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç *</label>
                                <textarea id="offer-description" name="description" rows="4" required 
                                         placeholder="–ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã—Ö —Ä–∞–±–æ—Ç..."></textarea>
                            </div>
                            <div class="form-group">
                                <label for="offer-terms">–£—Å–ª–æ–≤–∏—è –∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è</label>
                                <textarea id="offer-terms" name="terms" rows="3" 
                                         placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è, —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º, –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç..."></textarea>
                            </div>
                        </form>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" onclick="offersModule.closeCreateModal()">
                            –û—Ç–º–µ–Ω–∞
                        </button>
                        <button type="submit" class="btn btn-primary" form="create-offer-form">
                            <i class="fas fa-save"></i>
                            –°–æ–∑–¥–∞—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
                        </button>
                    </div>
                </div>
            </div>

            <!-- View Offer Modal -->
            <div id="view-offer-modal" class="modal-overlay">
                <div class="modal modal-xl">
                    <div class="modal-header">
                        <h3 id="view-offer-title">–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</h3>
                        <button class="modal-close" onclick="offersModule.closeViewModal()">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div id="offer-details">
                            <!-- Offer details will be loaded here -->
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" onclick="offersModule.closeViewModal()">
                            –ó–∞–∫—Ä—ã—Ç—å
                        </button>
                        <button type="button" class="btn btn-primary" onclick="offersModule.editCurrentOffer()">
                            <i class="fas fa-edit"></i>
                            –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                        </button>
                        <button type="button" class="btn btn-success" onclick="offersModule.sendOffer()">
                            <i class="fas fa-paper-plane"></i>
                            –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É
                        </button>
                        <button type="button" class="btn btn-info" onclick="offersModule.exportOfferPDF()">
                            <i class="fas fa-file-pdf"></i>
                            –°–∫–∞—á–∞—Ç—å PDF
                        </button>
                    </div>
                </div>
            </div>
        `;
    }

    // Load offers from API
    async loadOffers() {
        try {
            // Mock offers data
            const mockOffers = [
                {
                    id: 1,
                    number: '–ö–ü-2024-001',
                    title: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –∑–∞–≥–æ—Ä–æ–¥–Ω–æ–≥–æ –¥–æ–º–∞',
                    client_name: '–ò–≤–∞–Ω–æ–≤ –ò.–ò.',
                    type: 'construction',
                    amount: 3500000,
                    status: 'sent',
                    valid_until: '2024-03-15',
                    delivery_time: 120,
                    payment_terms: 'prepayment_30',
                    warranty: 24,
                    description: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ –¥–≤—É—Ö—ç—Ç–∞–∂–Ω–æ–≥–æ –∑–∞–≥–æ—Ä–æ–¥–Ω–æ–≥–æ –¥–æ–º–∞ –ø–ª–æ—â–∞–¥—å—é 180 –º¬≤',
                    terms: '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã —Å–æ–≥–ª–∞—Å–Ω–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏, –≤—Å–µ —Ä–∞–±–æ—Ç—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ –°–ù–∏–ü',
                    created_at: '2024-01-15',
                    sent_at: '2024-01-16'
                },
                {
                    id: 2,
                    number: '–ö–ü-2024-002',
                    title: '–†–µ–º–æ–Ω—Ç –æ—Ñ–∏—Å–Ω–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è',
                    client_name: '–û–û–û "–ë–∏–∑–Ω–µ—Å-–¶–µ–Ω—Ç—Ä"',
                    type: 'renovation',
                    amount: 850000,
                    status: 'accepted',
                    valid_until: '2024-02-28',
                    delivery_time: 45,
                    payment_terms: 'prepayment_50',
                    warranty: 12,
                    description: '–ö–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π —Ä–µ–º–æ–Ω—Ç –æ—Ñ–∏—Å–Ω–æ–≥–æ –ø–æ–º–µ—â–µ–Ω–∏—è 120 –º¬≤',
                    terms: '–†–∞–±–æ—Ç—ã –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ –Ω–µ—Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è',
                    created_at: '2024-01-10',
                    sent_at: '2024-01-11',
                    accepted_at: '2024-01-18'
                },
                {
                    id: 3,
                    number: '–ö–ü-2024-003',
                    title: '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞',
                    client_name: '–û–û–û "–†–∏—Ç–µ–π–ª –î–µ–≤–µ–ª–æ–ø–º–µ–Ω—Ç"',
                    type: 'design',
                    amount: 1200000,
                    status: 'viewed',
                    valid_until: '2024-04-01',
                    delivery_time: 90,
                    payment_terms: 'prepayment_50',
                    warranty: 0,
                    description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞',
                    terms: '–í–∫–ª—é—á–∞–µ—Ç –≤—Å–µ —Ä–∞–∑–¥–µ–ª—ã –ø—Ä–æ–µ–∫—Ç–Ω–æ–π –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏',
                    created_at: '2024-01-08',
                    sent_at: '2024-01-09',
                    viewed_at: '2024-01-12'
                }
            ];

            this.offers = mockOffers;
            this.pagination.total = mockOffers.length;

            this.renderOffersTable();
            this.renderPagination();
            this.updateStatistics();

        } catch (error) {
            console.error('Error loading offers:', error);
            showNotification('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π', 'error');
        }
    }

    // Render offers table
    renderOffersTable() {
        const tbody = document.getElementById('offers-tbody');
        
        if (this.offers.length === 0) {
            tbody.innerHTML = `
                <tr>
                    <td colspan="8" class="text-center p-4">
                        <div class="empty-state">
                            <i class="fas fa-file-contract fa-3x text-muted mb-3"></i>
                            <h4>–ù–µ—Ç –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π</h4>
                            <p class="text-muted">–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞</p>
                        </div>
                    </td>
                </tr>
            `;
            return;
        }

        tbody.innerHTML = this.offers.map(offer => `
            <tr>
                <td>
                    <div class="offer-number">
                        <strong>${offer.number}</strong>
                        <div class="offer-title">${offer.title}</div>
                    </div>
                </td>
                <td>${offer.client_name}</td>
                <td>
                    <span class="badge badge-${this.getTypeBadgeClass(offer.type)}">
                        ${this.getTypeText(offer.type)}
                    </span>
                </td>
                <td>
                    <div class="amount-display">
                        ${NumberUtils.formatCurrency(offer.amount)}
                    </div>
                </td>
                <td>
                    <span class="badge badge-${this.getStatusBadgeClass(offer.status)}">
                        ${this.getStatusText(offer.status)}
                    </span>
                </td>
                <td>
                    <div class="date-display ${this.isExpiringSoon(offer.valid_until) ? 'text-warning' : ''}">
                        ${DateUtils.format(offer.valid_until)}
                        ${this.isExpired(offer.valid_until) ? '<br><small class="text-danger">–ò—Å—Ç–µ–∫–ª–æ</small>' : ''}
                    </div>
                </td>
                <td>${DateUtils.format(offer.created_at)}</td>
                <td>
                    <div class="action-buttons">
                        <button class="btn btn-sm btn-primary" onclick="offersModule.viewOffer(${offer.id})" title="–ü—Ä–æ—Å–º–æ—Ç—Ä">
                            <i class="fas fa-eye"></i>
                        </button>
                        <button class="btn btn-sm btn-secondary" onclick="offersModule.editOffer(${offer.id})" title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="btn btn-sm btn-success" onclick="offersModule.exportOfferPDF(${offer.id})" title="PDF">
                            <i class="fas fa-file-pdf"></i>
                        </button>
                        <button class="btn btn-sm btn-info" onclick="offersModule.duplicateOffer(${offer.id})" title="–î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å">
                            <i class="fas fa-copy"></i>
                        </button>
                        <button class="btn btn-sm btn-danger" onclick="offersModule.deleteOffer(${offer.id})" title="–£–¥–∞–ª–∏—Ç—å">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </td>
            </tr>
        `).join('');
    }

    // Update statistics
    updateStatistics() {
        const totalOffers = this.offers.length;
        const pendingOffers = this.offers.filter(o => ['draft', 'sent', 'viewed'].includes(o.status)).length;
        const acceptedOffers = this.offers.filter(o => o.status === 'accepted').length;
        const totalValue = this.offers.reduce((sum, offer) => sum + (offer.amount || 0), 0);

        document.getElementById('total-offers').textContent = totalOffers;
        document.getElementById('pending-offers').textContent = pendingOffers;
        document.getElementById('accepted-offers').textContent = acceptedOffers;
        document.getElementById('total-value').textContent = NumberUtils.formatCurrency(totalValue);
    }

    // Initialize event listeners
    initEventListeners() {
        // Search
        const searchInput = document.getElementById('offers-search');
        searchInput?.addEventListener('input', debounce((e) => {
            this.filters.search = e.target.value;
            this.pagination.page = 1;
            this.loadOffers();
        }, 300));

        // Status filter
        const statusFilter = document.getElementById('offers-status-filter');
        statusFilter?.addEventListener('change', (e) => {
            this.filters.status = e.target.value;
            this.pagination.page = 1;
            this.loadOffers();
        });

        // Type filter
        const typeFilter = document.getElementById('offers-type-filter');
        typeFilter?.addEventListener('change', (e) => {
            this.filters.type = e.target.value;
            this.pagination.page = 1;
            this.loadOffers();
        });

        // Create form
        const createForm = document.getElementById('create-offer-form');
        createForm?.addEventListener('submit', (e) => {
            e.preventDefault();
            this.handleCreateOffer();
        });
    }

    // Show create offer modal
    async showCreateOfferModal() {
        await this.loadClientsForSelect();
        
        // Set default valid until date (30 days from now)
        const validUntilInput = document.getElementById('offer-valid-until');
        const futureDate = new Date();
        futureDate.setDate(futureDate.getDate() + 30);
        validUntilInput.value = futureDate.toISOString().split('T')[0];

        document.getElementById('create-offer-modal').classList.add('show');
    }

    // Close create modal
    closeCreateModal() {
        document.getElementById('create-offer-modal').classList.remove('show');
        document.getElementById('create-offer-form').reset();
    }

    // Load clients for select
    async loadClientsForSelect() {
        try {
            // Mock clients data
            const mockClients = [
                { id: 1, name: '–ò–≤–∞–Ω–æ–≤ –ò.–ò.' },
                { id: 2, name: '–û–û–û "–ë–∏–∑–Ω–µ—Å-–¶–µ–Ω—Ç—Ä"' },
                { id: 3, name: '–û–û–û "–†–∏—Ç–µ–π–ª –î–µ–≤–µ–ª–æ–ø–º–µ–Ω—Ç"' },
                { id: 4, name: '–ü–µ—Ç—Ä–æ–≤ –ü.–ü.' }
            ];

            const clientSelect = document.getElementById('offer-client');
            clientSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞</option>';
            
            mockClients.forEach(client => {
                const option = document.createElement('option');
                option.value = client.id;
                option.textContent = client.name;
                clientSelect.appendChild(option);
            });

        } catch (error) {
            console.error('Error loading clients:', error);
        }
    }

    // Handle create offer
    async handleCreateOffer() {
        try {
            const formData = new FormData(document.getElementById('create-offer-form'));
            const offerData = Object.fromEntries(formData.entries());

            // Generate offer number
            const offerNumber = `–ö–ü-${new Date().getFullYear()}-${String(Date.now()).slice(-3)}`;

            const newOffer = {
                id: Date.now(),
                number: offerNumber,
                title: offerData.title,
                client_name: '–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç',
                type: offerData.type,
                amount: parseFloat(offerData.amount) || 0,
                status: 'draft',
                valid_until: offerData.validUntil,
                delivery_time: parseInt(offerData.deliveryTime) || 0,
                payment_terms: offerData.paymentTerms,
                warranty: parseInt(offerData.warranty) || 0,
                description: offerData.description,
                terms: offerData.terms,
                created_at: new Date().toISOString().split('T')[0]
            };

            this.offers.unshift(newOffer);
            this.renderOffersTable();
            this.updateStatistics();

            showNotification('–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ', 'success');
            this.closeCreateModal();

        } catch (error) {
            console.error('Error creating offer:', error);
            showNotification('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è', 'error');
        }
    }

    // View offer
    viewOffer(id) {
        const offer = this.offers.find(o => o.id === id);
        if (!offer) return;

        this.currentOffer = offer;
        document.getElementById('view-offer-title').textContent = `${offer.number} - ${offer.title}`;
        
        const detailsContainer = document.getElementById('offer-details');
        detailsContainer.innerHTML = `
            <div class="offer-preview">
                <div class="offer-header">
                    <div class="company-info">
                        <h3>–û–û–û "–°—Ç—Ä–æ–π–ú–æ–Ω—Ç–∞–∂"</h3>
                        <p>–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–∞—è, –¥. 1</p>
                        <p>–¢–µ–ª: +7 (495) 123-45-67</p>
                        <p>Email: info@construction-crm.local</p>
                    </div>
                    <div class="offer-info">
                        <h3>–ö–æ–º–º–µ—Ä—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ ${offer.number}</h3>
                        <p>–æ—Ç ${DateUtils.format(offer.created_at)}</p>
                        <p>–¥–ª—è: ${offer.client_name}</p>
                    </div>
                </div>

                <div class="offer-content">
                    <div class="offer-section">
                        <h4>–ü—Ä–µ–¥–º–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</h4>
                        <p><strong>${offer.title}</strong></p>
                        <p>${offer.description}</p>
                    </div>

                    <div class="offer-section">
                        <h4>–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è</h4>
                        <div class="conditions-grid">
                            <div class="condition-item">
                                <label>–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–∞–±–æ—Ç:</label>
                                <span class="amount">${NumberUtils.formatCurrency(offer.amount)}</span>
                            </div>
                            <div class="condition-item">
                                <label>–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:</label>
                                <span>${offer.delivery_time} –¥–Ω–µ–π</span>
                            </div>
                            <div class="condition-item">
                                <label>–£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã:</label>
                                <span>${this.getPaymentTermsText(offer.payment_terms)}</span>
                            </div>
                            <div class="condition-item">
                                <label>–ì–∞—Ä–∞–Ω—Ç–∏—è:</label>
                                <span>${offer.warranty} –º–µ—Å—è—Ü–µ–≤</span>
                            </div>
                            <div class="condition-item">
                                <label>–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–æ:</label>
                                <span class="${this.isExpired(offer.valid_until) ? 'text-danger' : ''}">${DateUtils.format(offer.valid_until)}</span>
                            </div>
                        </div>
                    </div>

                    ${offer.terms ? `
                        <div class="offer-section">
                            <h4>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è</h4>
                            <p>${offer.terms}</p>
                        </div>
                    ` : ''}

                    <div class="offer-section">
                        <h4>–°—Ç–∞—Ç—É—Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</h4>
                        <span class="badge badge-${this.getStatusBadgeClass(offer.status)} badge-lg">
                            ${this.getStatusText(offer.status)}
                        </span>
                        ${offer.sent_at ? `<p class="mt-2">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${DateUtils.format(offer.sent_at)}</p>` : ''}
                        ${offer.viewed_at ? `<p>–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ: ${DateUtils.format(offer.viewed_at)}</p>` : ''}
                        ${offer.accepted_at ? `<p>–ü—Ä–∏–Ω—è—Ç–æ: ${DateUtils.format(offer.accepted_at)}</p>` : ''}
                    </div>
                </div>
            </div>
        `;

        document.getElementById('view-offer-modal').classList.add('show');
    }

    // Close view modal
    closeViewModal() {
        document.getElementById('view-offer-modal').classList.remove('show');
        this.currentOffer = null;
    }

    // Edit offer
    editOffer(id) {
        showNotification('–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏', 'info');
    }

    // Send offer
    sendOffer() {
        if (!this.currentOffer) return;
        
        // Update offer status
        this.currentOffer.status = 'sent';
        this.currentOffer.sent_at = new Date().toISOString().split('T')[0];
        
        this.renderOffersTable();
        this.updateStatistics();
        this.closeViewModal();
        
        showNotification('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç—É', 'success');
    }

    // Export offer to PDF
    exportOfferPDF(id) {
        showNotification('–≠–∫—Å–ø–æ—Ä—Ç –≤ PDF –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏', 'info');
    }

    // Duplicate offer
    duplicateOffer(id) {
        const offer = this.offers.find(o => o.id === id);
        if (!offer) return;

        const duplicatedOffer = {
            ...offer,
            id: Date.now(),
            number: `–ö–ü-${new Date().getFullYear()}-${String(Date.now()).slice(-3)}`,
            status: 'draft',
            created_at: new Date().toISOString().split('T')[0],
            sent_at: null,
            viewed_at: null,
            accepted_at: null
        };

        this.offers.unshift(duplicatedOffer);
        this.renderOffersTable();
        this.updateStatistics();

        showNotification('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–æ', 'success');
    }

    // Delete offer
    async deleteOffer(id) {
        if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ?')) return;

        try {
            this.offers = this.offers.filter(o => o.id !== id);
            this.renderOffersTable();
            this.updateStatistics();
            showNotification('–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ', 'success');
        } catch (error) {
            console.error('Error deleting offer:', error);
            showNotification('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è', 'error');
        }
    }

    // Export all offers
    exportOffers() {
        showNotification('–≠–∫—Å–ø–æ—Ä—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –±—É–¥–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –≤ —Å–ª–µ–¥—É—é—â–µ–π –≤–µ—Ä—Å–∏–∏', 'info');
    }

    // Reset filters
    resetFilters() {
        this.filters = {
            status: '',
            type: '',
            client: '',
            search: ''
        };
        
        document.getElementById('offers-search').value = '';
        document.getElementById('offers-status-filter').value = '';
        document.getElementById('offers-type-filter').value = '';
        
        this.pagination.page = 1;
        this.loadOffers();
    }

    // Render pagination
    renderPagination() {
        const container = document.getElementById('offers-pagination');
        const totalPages = Math.ceil(this.pagination.total / this.pagination.limit);
        
        if (totalPages <= 1) {
            container.innerHTML = '';
            return;
        }

        let paginationHTML = '<div class="pagination">';
        
        if (this.pagination.page > 1) {
            paginationHTML += `<button class="btn btn-sm btn-outline" onclick="offersModule.goToPage(${this.pagination.page - 1})">
                <i class="fas fa-chevron-left"></i>
            </button>`;
        }

        for (let i = 1; i <= totalPages; i++) {
            const isActive = i === this.pagination.page ? 'active' : '';
            paginationHTML += `<button class="btn btn-sm btn-outline ${isActive}" onclick="offersModule.goToPage(${i})">${i}</button>`;
        }

        if (this.pagination.page < totalPages) {
            paginationHTML += `<button class="btn btn-sm btn-outline" onclick="offersModule.goToPage(${this.pagination.page + 1})">
                <i class="fas fa-chevron-right"></i>
            </button>`;
        }

        paginationHTML += '</div>';
        container.innerHTML = paginationHTML;
    }

    // Go to page
    goToPage(page) {
        this.pagination.page = page;
        this.loadOffers();
    }

    // Helper methods
    getStatusText(status) {
        const statusMap = {
            draft: '–ß–µ—Ä–Ω–æ–≤–∏–∫',
            sent: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ',
            viewed: '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ',
            accepted: '–ü—Ä–∏–Ω—è—Ç–æ',
            rejected: '–û—Ç–∫–ª–æ–Ω–µ–Ω–æ',
            expired: '–ò—Å—Ç–µ–∫–ª–æ'
        };
        return statusMap[status] || status;
    }

    getStatusBadgeClass(status) {
        const classMap = {
            draft: 'secondary',
            sent: 'info',
            viewed: 'warning',
            accepted: 'success',
            rejected: 'danger',
            expired: 'dark'
        };
        return classMap[status] || 'secondary';
    }

    getTypeText(type) {
        const typeMap = {
            construction: '–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ',
            renovation: '–†–µ–º–æ–Ω—Ç',
            design: '–ü—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ',
            consultation: '–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è'
        };
        return typeMap[type] || type;
    }

    getTypeBadgeClass(type) {
        const classMap = {
            construction: 'primary',
            renovation: 'info',
            design: 'success',
            consultation: 'warning'
        };
        return classMap[type] || 'secondary';
    }

    getPaymentTermsText(terms) {
        const termsMap = {
            prepayment_100: '100% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞',
            prepayment_50: '50% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞, 50% –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏',
            prepayment_30: '30% –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞, 70% –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏',
            after_completion: '–û–ø–ª–∞—Ç–∞ –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏',
            monthly: '–ï–∂–µ–º–µ—Å—è—á–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏'
        };
        return termsMap[terms] || terms;
    }

    isExpired(date) {
        return new Date(date) < new Date();
    }

    isExpiringSoon(date) {
        const now = new Date();
        const expiry = new Date(date);
        const daysUntilExpiry = (expiry - now) / (1000 * 60 * 60 * 24);
        return daysUntilExpiry <= 7 && daysUntilExpiry > 0;
    }

    // Show/hide module
    show() {
        if (this.container) {
            this.container.style.display = 'block';
            this.loadOffers();
        }
    }

    hide() {
        if (this.container) {
            this.container.style.display = 'none';
        }
    }
}

// Create global instance
const offersModule = new OffersModule();

// Export for use in other modules
if (typeof module !== 'undefined' && module.exports) {
    module.exports = OffersModule;
}